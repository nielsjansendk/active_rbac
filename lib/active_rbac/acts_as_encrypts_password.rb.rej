***************
*** 231,237 ****
        # otherwise.
        def encrypt_password
          # initialize password_hash_type if required
-         write_attribute(:password_hash_type, 'sha1') if read_attribute(:password_hash_type).nil?
  
          if errors.count == 0 and password_new? and not password.nil? then
            # generate a new 10-ychar long hash only Base64 encoded so things are compatible
--- 231,239 ----
        # otherwise.
        def encrypt_password
          # initialize password_hash_type if required
+         #write_attribute(:password_hash_type, 'sha1') if read_attribute(:password_hash_type).nil?
+         #!!!BUGFIX from enginayard
+         write_attribute(:password_hash_type, 'sha1') if read_attribute(:password_hash_type).blank?        
  
          if errors.count == 0 and password_new? and not password.nil? then
            # generate a new 10-ychar long hash only Base64 encoded so things are compatible
